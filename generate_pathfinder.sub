# Submit from repo root: condor_submit generate_pathfinder.sub
# Generates Pathfinder images using snakes2_wrapper.py across multiple processes.

BASE_DIR                = .
ENV_ACTIVATE            = .venv/bin/activate
SCRIPT                  = Datasets/Pathfinder/snakes2_wrapper.py

# Output dataset root (will contain condition subfolders and imgs/metadata trees)
DATADIR                 = Data/Pathfinder

# Parallelization controls
NUM_MACHINES            = 8
TOTAL_IMAGES            = 80000

universe                = vanilla
executable              = /bin/bash
initialdir              = $(BASE_DIR)
arguments               = -lc 'source ~/.bashrc; if [ -f "$(ENV_ACTIVATE)" ]; then source "$(ENV_ACTIVATE)"; fi; mkdir -p "$(DATADIR)"; python $(SCRIPT) $(NUM_MACHINES) $(Process) $(TOTAL_IMAGES) "$(DATADIR)"'
log                     = condor_logs/pfgen.$(Cluster).$(Process).log
output                  = condor_logs/pfgen.$(Cluster).$(Process).out
error                   = condor_logs/pfgen.$(Cluster).$(Process).err
request_cpus            = 2
request_memory          = 4 GB
request_disk            = 2 GB
getenv                  = True
stream_output           = True
stream_error            = True

# Optional: route temporary files and pip cache to data to avoid HOME quota
TMPDIR                  = 
PIP_CACHE_DIR           = 
environment             = "ENV_ACTIVATE=$(ENV_ACTIVATE); DATADIR=$(DATADIR); TMPDIR=$(TMPDIR); PIP_CACHE_DIR=$(PIP_CACHE_DIR)"

queue $(NUM_MACHINES)
