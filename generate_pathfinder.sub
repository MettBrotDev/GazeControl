# Submit from repo root: condor_submit generate_pathfinder.sub
# Generates Pathfinder images using snakes2_wrapper.py across multiple processes.

BASE_DIR                = .
SCRIPT                  = Datasets/Pathfinder/snakes2_wrapper.py
PYTHON                  = .venv/bin/python

# Output dataset root (will contain condition subfolders and imgs/metadata trees)
DATADIR                 = Data/Pathfinder

# Parallelization controls
NUM_MACHINES            = 8
TOTAL_IMAGES            = 80000

universe                = vanilla
executable              = $(PYTHON)
initialdir              = $(BASE_DIR)
arguments               = $(SCRIPT) $(NUM_MACHINES) $(Process) $(TOTAL_IMAGES) $(DATADIR)
log                     = condor_logs/pfgen.$(Cluster).$(Process).log
output                  = condor_logs/pfgen.$(Cluster).$(Process).out.log
error                   = condor_logs/pfgen.$(Cluster).$(Process).err.log
request_cpus            = 2
request_memory          = 4 GB
request_disk            = 2 GB
getenv                  = True
stream_output           = True
stream_error            = True

# Optional: route temporary files and pip cache to data to avoid HOME quota
TMPDIR                  = 
PIP_CACHE_DIR           = 
environment             = "DATADIR=$(DATADIR); TMPDIR=$(TMPDIR); PIP_CACHE_DIR=$(PIP_CACHE_DIR)"

queue $(NUM_MACHINES)
